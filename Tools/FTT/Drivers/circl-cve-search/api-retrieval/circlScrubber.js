//const exec = require('child_process');
const parse = require('node-html-parser').parse;
const exec = require('child_process').exec;
const fs = require('fs');

/*
exec('curl https://www.npmjs.com/advisories', (error, stdout, stderr) => {
if (error) {
console.error(`exec error: ${error}`);
return;
}
//console.log(`stdout: ${stdout}`);
const root = parse(stdout)
console.log(root.firstChild.structure);
});
*/
var path1 = 'http://cve.circl.lu/api/browse/'
var path2 = 'http://cve.circl.lu/api/search/'
var v;
var p;
var j;

//browse for vendors
exec('curl ' + path1, (error, stdout, stderr) => {
  if (error) {
    console.error(`exec error: ${error}`);
    return;
  }

  //browse for products offer by vendors
  var vendors = JSON.parse(stdout).vendor
  vendors = vendors.filter(vendor => vendor.includes("js"));
  console.log(vendors);

  for (v = 60; v < vendors.length; v++) { /*vendors.length*/
    exec('curl ' + path1 + vendors[v], (error, stdout, stderr) => {
      if (error) {
        console.error(`exec error: ${error}`);
        return;
      }

      //search for specific product by a vendor
      var product_data = JSON.parse(stdout);
      for(p = 0; p < product_data.product.length; p++){
        console.log('curl ' + path2 + product_data.vendor + "/" + product_data.product[p]);
        exec('curl ' + path2 + product_data.vendor + "/" + product_data.product[p], function(error, stdout, stderr) {
          if (error) {
            console.error(`exec error: ${error}`);
            return;
          }
          console.log(stdout);
          fs.appendFile('output.txt', '\n\n'+stdout+'\n\n-------------------------------------------------------------------------------------------------------------------------', (err) => { if (err) throw err; });
      });
    }
    });
  }
});
